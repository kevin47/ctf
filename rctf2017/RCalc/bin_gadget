Gadgets information
============================================================
0x0000000000400bcd : adc byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x0000000000400c45 : add al, ch ; add eax, 0x90fffffc ; pop rbp ; ret
0x000000000040112f : add bl, dh ; ret
0x0000000000401393 : add byte ptr [rax + rax], ch ; add byte ptr [rbx], dl ; idiv edi ; jmp rdi
0x000000000040112d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040112b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000040096c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040112c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000401395 : add byte ptr [rax], al ; add byte ptr [rbx], dl ; idiv edi ; jmp rdi
0x0000000000401392 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; add byte ptr [rbx], dl ; idiv edi ; jmp rdi
0x0000000000400889 : add byte ptr [rax], al ; jmp 0x400809
0x000000000040096e : add byte ptr [rax], al ; pop rbp ; ret
0x000000000040112e : add byte ptr [rax], al ; ret
0x0000000000401397 : add byte ptr [rbx], dl ; idiv edi ; jmp rdi
0x00000000004009d8 : add byte ptr [rcx], al ; ret
0x0000000000400cb8 : add dword ptr [rax - 0x3603ba75], edx ; ret
0x0000000000400bca : add dword ptr [rax - 0x77], ecx ; adc byte ptr [rax - 0x75], cl ; clc ; pop rbp ; ret
0x00000000004009d4 : add eax, 0x20170e ; add ebx, esi ; ret
0x00000000004007ef : add eax, 0x48002018 ; test eax, eax ; je 0x400803 ; call rax
0x0000000000400c47 : add eax, 0x90fffffc ; pop rbp ; ret
0x0000000000400d66 : add eax, edx ; leave ; ret
0x00000000004009d9 : add ebx, esi ; ret
0x0000000000400b8c : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000400aa5 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004007fb : add esp, 8 ; ret
0x0000000000400d65 : add rax, rdx ; leave ; ret
0x0000000000400b8b : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000400aa4 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004007fa : add rsp, 8 ; ret
0x0000000000400b47 : and byte ptr [rax - 0x77], cl ; ret
0x0000000000400962 : and byte ptr [rax], ah ; jmp rax
0x00000000004009d7 : and byte ptr [rax], al ; add ebx, esi ; ret
0x00000000004007f1 : and byte ptr [rax], al ; test rax, rax ; je 0x400801 ; call rax
0x0000000000400c8a : call 0x10020dda
0x0000000000400c89 : call 0x10020ddb
0x0000000000401109 : call qword ptr [r12 + rbx*8]
0x000000000040134b : call qword ptr [rax]
0x000000000040110a : call qword ptr [rsp + rbx*8]
0x00000000004007f8 : call rax
0x0000000000400deb : cdq ; idiv qword ptr [rbp - 0x10] ; mov rax, rdx ; leave ; ret
0x0000000000400e31 : clc ; imul rax, qword ptr [rbp - 0x10] ; leave ; ret
0x0000000000400e6b : clc ; mov qword ptr [rdx], rax ; nop ; pop rbp ; ret
0x0000000000400d60 : clc ; mov rax, qword ptr [rbp - 0x10] ; add rax, rdx ; leave ; ret
0x0000000000400bd1 : clc ; pop rbp ; ret
0x0000000000400da6 : clc ; sub rax, qword ptr [rbp - 0x10] ; leave ; ret
0x0000000000400cbc : cld ; leave ; ret
0x0000000000400d21 : dec ecx ; ret
0x000000000040110c : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000400ded : idiv dword ptr [rbp - 0x10] ; mov rax, rdx ; leave ; ret
0x0000000000401399 : idiv edi ; jmp rdi
0x0000000000400dec : idiv qword ptr [rbp - 0x10] ; mov rax, rdx ; leave ; ret
0x0000000000400e33 : imul eax, dword ptr [rbp - 0x10] ; leave ; ret
0x0000000000400e32 : imul rax, qword ptr [rbp - 0x10] ; leave ; ret
0x0000000000401394 : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; add byte ptr [rbx], dl ; idiv edi ; jmp rdi
0x00000000004009f9 : int1 ; push rbp ; mov rbp, rsp ; call rax
0x00000000004007f6 : je 0x4007fc ; call rax
0x000000000040095d : je 0x400978 ; pop rbp ; mov edi, 0x6020a8 ; jmp rax
0x00000000004009ab : je 0x4009c0 ; pop rbp ; mov edi, 0x6020a8 ; jmp rax
0x00000000004009f8 : je 0x4009f1 ; push rbp ; mov rbp, rsp ; call rax
0x0000000000400dee : jge 0x400de6 ; mov rax, rdx ; leave ; ret
0x000000000040088b : jmp 0x400807
0x0000000000400965 : jmp rax
0x000000000040139b : jmp rdi
0x0000000000400cbd : leave ; ret
0x0000000000400b8a : loopne 0x400bdb ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000400b89 : loopne 0x400bdc ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004009d3 : mov byte ptr [rip + 0x20170e], 1 ; ret
0x0000000000400bcc : mov dword ptr [rax], edx ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000400e6d : mov dword ptr [rdx], eax ; nop ; pop rbp ; ret
0x00000000004010b2 : mov eax, 0 ; pop rbp ; ret
0x0000000000400d62 : mov eax, dword ptr [rbp - 0x10] ; add rax, rdx ; leave ; ret
0x0000000000400b88 : mov eax, dword ptr [rbp - 0x20] ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000400cba : mov eax, dword ptr [rbp - 4] ; leave ; ret
0x0000000000400e2f : mov eax, dword ptr [rbp - 8] ; imul rax, qword ptr [rbp - 0x10] ; leave ; ret
0x0000000000400e69 : mov eax, dword ptr [rbp - 8] ; mov qword ptr [rdx], rax ; nop ; pop rbp ; ret
0x0000000000400bcf : mov eax, dword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000400da4 : mov eax, dword ptr [rbp - 8] ; sub rax, qword ptr [rbp - 0x10] ; leave ; ret
0x0000000000400df1 : mov eax, edx ; leave ; ret
0x00000000004009fc : mov ebp, esp ; call rax
0x0000000000400960 : mov edi, 0x6020a8 ; jmp rax
0x0000000000401107 : mov edi, edi ; call qword ptr [r12 + rbx*8]
0x0000000000401106 : mov edi, r15d ; call qword ptr [r12 + rbx*8]
0x0000000000400bcb : mov qword ptr [rax], rdx ; mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000400e6c : mov qword ptr [rdx], rax ; nop ; pop rbp ; ret
0x0000000000400d61 : mov rax, qword ptr [rbp - 0x10] ; add rax, rdx ; leave ; ret
0x0000000000400e68 : mov rax, qword ptr [rbp - 8] ; mov qword ptr [rdx], rax ; nop ; pop rbp ; ret
0x0000000000400bce : mov rax, qword ptr [rbp - 8] ; pop rbp ; ret
0x0000000000400da3 : mov rax, qword ptr [rbp - 8] ; sub rax, qword ptr [rbp - 0x10] ; leave ; ret
0x0000000000400df0 : mov rax, rdx ; leave ; ret
0x00000000004009fb : mov rbp, rsp ; call rax
0x0000000000400aa3 : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400f9f : nop ; leave ; ret
0x0000000000400cb9 : nop ; mov eax, dword ptr [rbp - 4] ; leave ; ret
0x0000000000400f9e : nop ; nop ; leave ; ret
0x0000000000400c4b : nop ; pop rbp ; ret
0x0000000000400968 : nop dword ptr [rax + rax] ; pop rbp ; ret
0x0000000000401128 : nop dword ptr [rax + rax] ; ret
0x00000000004009b5 : nop dword ptr [rax] ; pop rbp ; ret
0x0000000000400aa1 : or byte ptr [r8 + 0x8c48348], dl ; pop rbx ; pop rbp ; ret
0x0000000000400aa2 : or byte ptr [rax + 0x8c48348], dl ; pop rbx ; pop rbp ; ret
0x0000000000400aa7 : or byte ptr [rbx + 0x5d], bl ; ret
0x000000000040111c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040111e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401120 : pop r14 ; pop r15 ; ret
0x0000000000401122 : pop r15 ; ret
0x00000000004009d2 : pop rbp ; mov byte ptr [rip + 0x20170e], 1 ; ret
0x000000000040095f : pop rbp ; mov edi, 0x6020a8 ; jmp rax
0x000000000040111b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040111f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000400970 : pop rbp ; ret
0x0000000000400aa8 : pop rbx ; pop rbp ; ret
0x0000000000401123 : pop rdi ; ret
0x0000000000401121 : pop rsi ; pop r15 ; ret
0x000000000040111d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004009fa : push rbp ; mov rbp, rsp ; call rax
0x00000000004007fe : ret
0x0000000000400892 : ret 0x2017
0x0000000000400c8d : ret 0xb60f
0x0000000000400c86 : ror byte ptr [rax - 0x75], 1 ; call 0x10020dde
0x0000000000400d67 : ror cl, 1 ; ret
0x00000000004009f7 : sal byte ptr [rcx + rsi*8 + 0x55], 0x48 ; mov ebp, esp ; call rax
0x00000000004007f5 : sal byte ptr [rdx + rax - 1], 0xd0 ; add rsp, 8 ; ret
0x0000000000400b8e : sub byte ptr [rbx + 0x5d], bl ; ret
0x0000000000400da8 : sub eax, dword ptr [rbp - 0x10] ; leave ; ret
0x0000000000401135 : sub esp, 8 ; add rsp, 8 ; ret
0x0000000000400da7 : sub rax, qword ptr [rbp - 0x10] ; leave ; ret
0x0000000000401134 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000040096a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000040112a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004007f4 : test eax, eax ; je 0x4007fe ; call rax
0x00000000004009f6 : test eax, eax ; je 0x4009f3 ; push rbp ; mov rbp, rsp ; call rax
0x00000000004007f3 : test rax, rax ; je 0x4007ff ; call rax
0x00000000004009f5 : test rax, rax ; je 0x4009f4 ; push rbp ; mov rbp, rsp ; call rax

Unique gadgets found: 133
